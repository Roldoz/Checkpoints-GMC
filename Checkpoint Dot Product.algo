PROCEDURE dot_product(V1 : ARRAY_OF INTEGER, V2 : ARRAY_OF INTEGER )
VAR
    i : INTEGER
    ps : INTEGER := 0
BEGIN
    FOR i FROM 0 TO V1.length-1 DO
        ps := V1[i] * V2[i];
    END_FOR
END

ALGORITHM orthogonal_vectors
VAR
    i,n,d := INTEGER;
    V1 : ARRAY_OF INTEGER [10];
    V2 : ARRAY_OF INTEGER [10];
BEGIN
    d := dot_product()
    FOR i FROM 0 TO n DO
        dot_product(V1,V2);
        IF (d = 0) THEN
            write(" the vectors are ortogonal ")
        ELSE
            write(" the vectors are not ortogonal ")
        END_IF
    END_FOR
END

_________________________________________________________________________________________________________

FUNCTION dot_product() : INTEGER
VAR
    ps : FLOAT := 0;
    V1,V2 : ARRAY_OF INTEGER;
BEGIN
    ps != V1 * V2;
    RETURN ps ;
END

ALGORITHM orthogonal_vectors
VAR
    i,n,d := INTEGER;
    V1 : ARRAY_OF INTEGER [10];
    V2 : ARRAY_OF INTEGER [10];
BEGIN
    d := dot_product()
    FOR i FROM 0 TO n DO
        dot_product(V1,V2);
        IF (d = 0) THEN
            write(" the vectors are ortogonal ")
        ELSE
            write(" the vectors are not ortogonal ")
        END_IF
    END_FOR
END